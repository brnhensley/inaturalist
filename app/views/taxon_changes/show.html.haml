- content_for(:title) do
  :ruby
    title = case @taxon_change.class.name
    when "TaxonSwap" then t( :taxon_change_title_taxon_swap, id: @taxon_change.id )
    when "TaxonSplit" then t( :taxon_change_title_taxon_split, id: @taxon_change.id )
    when "TaxonMerge" then t( :taxon_change_title_taxon_merge, id: @taxon_change.id )
    when "TaxonDrop" then t( :taxon_change_title_taxon_drop, id: @taxon_change.id )
    when "TaxonStage" then t( :taxon_change_title_taxon_stage, id: @taxon_change.id )
    end
  = title
  = "(#{@taxon_change.committed_on.blank? ? t( :draft_ ) : t( :committed_on, date: l( @taxon_change.committed_on ) )})"
- content_for(:extracss) do
  = stylesheet_link_tag "taxon_changes"
  :css
    iframe { border: 0; }
- content_for :extrajs do
  = javascript_include_tag "taxon_changes/show"
.container
  .row
    .col-xs-12
      - unless @existing.blank?
        .alert.alert-warning
          %p.ui=t :heads_up_there_are_other_draft_taxon_changes_html, count: @existing.size
          %ul
            - for tc in @existing
              %li
                = "(#{tc.input_taxa.map{|it|  "#{it.name} #{it.id}" }.join(', ')})"
                %strong=t "change_types.#{tc.verb_phrase}"
                = "(#{tc.output_taxa.map{|it| "#{it.name} #{it.id}"}.join(', ')})"
                = "(#{tc.committed_on.blank? ? t( :draft_ ) : t( :committed_on, date: l( tc.committed_on ) )})"
                = link_to t(:view), tc, :class => "readmore"
          %p.ui=t :you_should_delete_this_taxon_change
      - if @taxon_change.draft? && @taxon_change.is_a?( TaxonSplit )
        .alert.alert-warning
          - if @taxon_change.automatable?
            =t :heads_up_automatable_draft_split_notice_html, taxon: @taxon_change.output_ancestor ? link_to_taxon( @taxon_change.output_ancestor, sciname: true ) : t( "all_taxa.life" )
          - else
            =t :heads_up_non_automatable_draft_split_notice_html
      - elsif @taxon_change.is_a?( TaxonSplit ) && @taxon_change.automatable?
        .alert.alert-warning
          =t :heads_up_automatable_split_notice_html, taxon: link_to_taxon( @taxon_change.output_ancestor, sciname: true )
          = link_to t( :review_identifications_of_taxon_html, taxon: @taxon_change.input_taxon.name, taxon_id: @taxon_change.input_taxon.id, vow_or_con: @taxon_change.input_taxon.name.first.downcase ), identifications_path( taxon_id: @taxon_change.input_taxon.id, current: "any" ), class: "viewmore taxon #{@taxon_change.input_taxon.rank}"
      -if @observose_taxon
        .alert.alert-warning=t :heads_up_observose_taxon_change_html, observose_taxon_threshold: @observose_taxon_threshold
      - if @curated_upstream_taxon_framework && !current_user.is_admin?
        .alert.alert-warning
          =t :heads_up_taxon_change_inputs_covered_by_framework_html, framework_url: taxonomy_details_for_taxon_path( @curated_upstream_taxon_framework.taxon )
          %ul
            - @curated_upstream_taxon_framework.taxon_curators.each do |tc|
              %li
                = link_to user_image( tc.user ), person_path( tc.user.login )
                = link_to_user( tc.user )
      #pageheader
        .breadcrumbs
          %strong= link_to "&laquo #{t :back_to_taxon_changes}".html_safe, taxon_changes_path, :class => 'crumb'
  .row
    .col-xs-12
      = render partial: "show_change_taxon", object: @taxon_change, locals: { show_commit_button: true }
      - if logged_in? && current_user.is_curator? && @taxon_change.draft? && @taxon_change.is_a?( TaxonSwap )
        .potential_clashes
          .notice.box
            Committing this swap may result in clashes, please first
            = link_to "analyze the clashes", taxa_clashes_path(id: @taxon_change.input_taxa[0].id), :class => "potential_clashes_link", :data => { input_ancestry: @taxon_change.input_taxa[0].ancestry, output_ancestry: @taxon_change.output_taxon.ancestry }, "data-remote" => "false", "data-target" => "#clashes_modal", "data-toggle" => "modal"
            this may take a while

      - if logged_in? && current_user.is_curator? && @taxon_change.draft? && @taxon_change.is_a?( TaxonSplit )
        #id_analysis
        =link_to t( :analyze_ids), "#", :class => "analyze_ids_button", :data => { taxon_change_id: @taxon_change.id }
        - helptip_for "analyze" do
          = t :estimate_which_input
        = image_tag "spinner.gif", :class => "spinner"
        .analysis
          =t( :total_ids_on_input_taxon )
          =link_to 0, "#", target: "_blank", class: "analysis_input"
          %table.analysis
            %tr.headers
              %td= t(:no_ids)
              %td= t(:destination)
              %td= t(:atlas)
          = link_to_function t( :reset ), "resetFunction()"
  .row
    .col-xs-12
      #mapwrapper.stacked
        %iframe.stacked{:height => "600", :src => "#{taxa_map_url(:taxa => [@taxon_change.taxon, @taxon_change.taxa].flatten.compact.map{|t| t.id}, placement: "taxon-changes-show" )}", :width => "100%"}
  .row
    .col-xs-12
      #comments.column.span-18
        = render :partial => "comments/comments", :object => @taxon_change
        - if logged_in?
          .upstacked
            = render "subscriptions/subscription", resource: @taxon_change


#clashes_modal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "clashes_modal_label", :role => "dialog", :tabindex => "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} Ã—
        %h4#clashes_modal_label.modal-title Analyze Clashes
      .modal-body
        = image_tag "spinner.gif", :id => "spinner", :class => "center"
      .modal-footer
        Clashes occur when narrowing a parent results in a existing IDs of the narrowed parent being interpreted as disagreements with existing IDs of the moved child. For example, Bufo is a child of Bufonidae. An observation has an ID of Bufonidae and an ID of Bufo bufo. If Bufo is moved out of Bufonidae, then the ID of Bufonidae will be reinterpreted as a disagreement with Bufo bufo. This is a clash. If narrowing a parent results in more than 10 clashes, you should split the parent. e.g. if Bufo is moved from Bufonidae to Hylidae, afterwards split Bufonidae into Bufonidae and Hylidae. This will replace existing IDs of Bufonidae with the common ancestor Anura and avoid clashes.
